{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { environment } from './../../../../environments/environment';\nimport { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nlet AnuncioComponent = class AnuncioComponent {\n  constructor(anuncioservice, route, spinner, toast) {\n    this.anuncioservice = anuncioservice;\n    this.route = route;\n    this.spinner = spinner;\n    this.toast = toast;\n    this.descricao = '';\n    this.anuncios = [];\n    this.queryField = new FormControl();\n    this.imageUrl = environment.imagesService;\n  }\n  ngOnInit() {\n    this.buscarTodosAnuncios();\n    // debugger;\n    // this.results = this.queryField.valueChanges\n    //   .pipe(\n    //     map((value) => value.trim()),\n    //     filter((value) => value.length >= 3),\n    //     debounceTime(200),\n    //     distinctUntilChanged(),\n    //     switchMap( async value => this.buscarAnunciosPorDescricao(value),\n    //     )\n    //   ),\n    //   tap((res: any) => this.anuncios = res.anuncios )\n    //   map((res: any => res.results));\n  }\n\n  buscarTodosAnuncios() {\n    this.spinner.show();\n    this.anuncioservice.BuscarTodosAnunciosOuPorDescricao().subscribe(result => {\n      debugger;\n      if (result != null) this.anuncios = result;\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 500);\n    }, erro => {\n      this.toast.error('Erro ao buscar os anúncios. Verifique a conexão com a internet.');\n      this.spinner.hide();\n    });\n  }\n  buscarAnunciosPorDescricao() {\n    debugger;\n    if (this.descricao.trim() == \"\") {\n      this.buscarTodosAnuncios();\n    } else if (this.descricao.length < 3) {\n      this.toast.error('Digite no minimo 3 caracteres para fazer a busca.');\n    } else {\n      this.spinner.show();\n      this.anuncioservice.BuscarTodosAnunciosOuPorDescricao(this.descricao).subscribe(result => {\n        debugger;\n        if (result != null) this.anuncios = result;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 500);\n        if (result == null) {\n          this.spinner.hide();\n          this.toast.error('Nehum resultado para a busca: ' + this.descricao.toLocaleUpperCase());\n        }\n      }, erro => {\n        this.toast.error('Erro ao buscar os anúncios. Verifique a conexão com a internet.');\n        this.spinner.hide();\n      });\n    }\n  }\n  abrirModalAnuncio(anuncio) {\n    // const modalRef = this.modalService.open(DetalhesAnuncioComponent);\n    // modalRef.componentInstance.anuncio = anuncio;\n  }\n};\nAnuncioComponent = __decorate([Component({\n  selector: 'app-anuncio',\n  templateUrl: './anuncio.component.html',\n  styleUrls: ['./anuncio.component.css']\n})], AnuncioComponent);\nexport { AnuncioComponent };","map":{"version":3,"mappings":";AAAA,SAASA,WAAW,QAAQ,wCAAwC;AAGpE,SAASC,SAAS,QAAgB,eAAe;AAIjD,SAASC,WAAW,QAAQ,gBAAgB;AAiBrC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAO3BC,YACUC,cAA8B,EAC9BC,KAAa,EACbC,OAA0B,EAC1BC,KAAoB;IAHpB,mBAAc,GAAdH,cAAc;IACd,UAAK,GAALC,KAAK;IACL,YAAO,GAAPC,OAAO;IACP,UAAK,GAALC,KAAK;IAVf,cAAS,GAAW,EAAE;IACf,aAAQ,GAAc,EAAE;IAC/B,eAAU,GAAG,IAAIN,WAAW,EAAE;IAE9B,aAAQ,GAAQF,WAAW,CAACS,aAAa;EAOtC;EAEHC,QAAQ;IACN,IAAI,CAACC,mBAAmB,EAAE;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;EAEAA,mBAAmB;IACjB,IAAI,CAACJ,OAAO,CAACK,IAAI,EAAE;IACnB,IAAI,CAACP,cAAc,CAACQ,iCAAiC,EAAE,CAACC,SAAS,CAC9DC,MAAW,IAAI;MACd;MACA,IAAIA,MAAM,IAAI,IAAI,EAAE,IAAI,CAACC,QAAQ,GAAGD,MAAM;MAC1CE,UAAU,CAAC,MAAK;QACd,IAAI,CAACV,OAAO,CAACW,IAAI,EAAE;MACrB,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,EACAC,IAAI,IAAI;MACP,IAAI,CAACX,KAAK,CAACY,KAAK,CAAC,iEAAiE,CAAC;MACnF,IAAI,CAACb,OAAO,CAACW,IAAI,EAAE;IACrB,CAAC,CACF;EACH;EAEAG,0BAA0B;IAC5B;IACI,IAAG,IAAI,CAACC,SAAS,CAACC,IAAI,EAAE,IAAI,EAAE,EAAC;MAC7B,IAAI,CAACZ,mBAAmB,EAAE;KAC3B,MACI,IAAG,IAAI,CAACW,SAAS,CAACE,MAAM,GAAG,CAAC,EAAC;MAChC,IAAI,CAAChB,KAAK,CAACY,KAAK,CAAC,mDAAmD,CAAC;KACtE,MACG;MACF,IAAI,CAACb,OAAO,CAACK,IAAI,EAAE;MACnB,IAAI,CAACP,cAAc,CAChBQ,iCAAiC,CAAC,IAAI,CAACS,SAAS,CAAC,CACjDR,SAAS,CACPC,MAAW,IAAI;QACd;QACA,IAAIA,MAAM,IAAI,IAAI,EAAE,IAAI,CAACC,QAAQ,GAAGD,MAAM;QAC1CE,UAAU,CAAC,MAAK;UACd,IAAI,CAACV,OAAO,CAACW,IAAI,EAAE;QACrB,CAAC,EAAE,GAAG,CAAC;QACP,IAAGH,MAAM,IAAI,IAAI,EAAC;UAChB,IAAI,CAACR,OAAO,CAACW,IAAI,EAAE;UACnB,IAAI,CAACV,KAAK,CAACY,KAAK,CAAC,gCAAgC,GAAC,IAAI,CAACE,SAAS,CAACG,iBAAiB,EAAE,CAAC;;MAEzF,CAAC,EACAN,IAAI,IAAI;QACP,IAAI,CAACX,KAAK,CAACY,KAAK,CAAC,iEAAiE,CAAC;QACnF,IAAI,CAACb,OAAO,CAACW,IAAI,EAAE;MACrB,CAAC,CACF;;EAEP;EAEAQ,iBAAiB,CAACC,OAAgB;IAChC;IACA;EAAA;CAEH;AAnFYxB,gBAAgB,eAL5BF,SAAS,CAAC;EACT2B,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACW3B,gBAAgB,CAmF5B;SAnFYA,gBAAgB","names":["environment","Component","FormControl","AnuncioComponent","constructor","anuncioservice","route","spinner","toast","imagesService","ngOnInit","buscarTodosAnuncios","show","BuscarTodosAnunciosOuPorDescricao","subscribe","result","anuncios","setTimeout","hide","erro","error","buscarAnunciosPorDescricao","descricao","trim","length","toLocaleUpperCase","abrirModalAnuncio","anuncio","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\projetos\\MarketingFront\\MarketingAppFront\\src\\app\\Components\\pagina-principal\\anuncio\\anuncio.component.ts"],"sourcesContent":["import { environment } from './../../../../environments/environment';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { DetalhesAnuncioComponent } from './../../Anuncio/detalhes-anuncio/detalhes-anuncio.component';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Anuncio } from '../../../Models/Anuncio';\nimport { AnuncioService } from 'src/app/Services/AnuncioService';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {\n  tap,\n  map,\n  filter,\n  distinctUntilChanged,\n  debounceTime,\n  switchMap,\n} from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-anuncio',\n  templateUrl: './anuncio.component.html',\n  styleUrls: ['./anuncio.component.css'],\n})\nexport class AnuncioComponent implements OnInit {\n  descricao: string = '';\n  public anuncios: Anuncio[] = [];\n  queryField = new FormControl();\n  results: Observable<any>;\n  imageUrl: any = environment.imagesService;\n\n  constructor(\n    private anuncioservice: AnuncioService,\n    private route: Router,\n    private spinner: NgxSpinnerService,\n    private toast: ToastrService,\n  ) {}\n\n  ngOnInit(): void {\n    this.buscarTodosAnuncios();\n    // debugger;\n    // this.results = this.queryField.valueChanges\n    //   .pipe(\n    //     map((value) => value.trim()),\n    //     filter((value) => value.length >= 3),\n    //     debounceTime(200),\n    //     distinctUntilChanged(),\n    //     switchMap( async value => this.buscarAnunciosPorDescricao(value),\n    //     )\n    //   ),\n    //   tap((res: any) => this.anuncios = res.anuncios )\n    //   map((res: any => res.results));\n  }\n\n  buscarTodosAnuncios() {\n    this.spinner.show();\n    this.anuncioservice.BuscarTodosAnunciosOuPorDescricao().subscribe(\n      (result: any) => {\n        debugger;\n        if (result != null) this.anuncios = result;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 500);\n      },\n      (erro) => {\n        this.toast.error('Erro ao buscar os anúncios. Verifique a conexão com a internet.');\n        this.spinner.hide();\n      }\n    );\n  }\n\n  buscarAnunciosPorDescricao() {\ndebugger;\n    if(this.descricao.trim() == \"\"){\n      this.buscarTodosAnuncios();\n    }\n    else if(this.descricao.length < 3){\n      this.toast.error('Digite no minimo 3 caracteres para fazer a busca.');\n    }\n    else{\n      this.spinner.show();\n      this.anuncioservice\n        .BuscarTodosAnunciosOuPorDescricao(this.descricao)\n        .subscribe(\n          (result: any) => {\n            debugger;\n            if (result != null) this.anuncios = result;\n            setTimeout(() => {\n              this.spinner.hide();\n            }, 500);\n            if(result == null){\n              this.spinner.hide();\n              this.toast.error('Nehum resultado para a busca: '+this.descricao.toLocaleUpperCase());\n            }\n          },\n          (erro) => {\n            this.toast.error('Erro ao buscar os anúncios. Verifique a conexão com a internet.');\n            this.spinner.hide();\n          }\n        );\n    }\n  }\n\n  abrirModalAnuncio(anuncio: Anuncio) {\n    // const modalRef = this.modalService.open(DetalhesAnuncioComponent);\n    // modalRef.componentInstance.anuncio = anuncio;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}