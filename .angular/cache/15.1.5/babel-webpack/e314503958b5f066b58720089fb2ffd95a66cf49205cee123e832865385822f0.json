{"ast":null,"code":"import { environment } from './../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AnuncioService {\n  constructor(http) {\n    this.http = http;\n  }\n  BuscarTodosAnunciosOuPorDescricao(descricao) {\n    return this.http.get(`${environment.apiUrl}/anuncio/buscatodosanuncios/` + descricao);\n  }\n  BuscarAnunciosPorDescricao(descricao) {\n    return this.http.get(`${environment.apiUrl}/anuncio/buscaranunciospordescricao/` + descricao);\n  }\n  BuscarAnuncioPorId(id) {\n    return this.http.get(`${environment.apiUrl}/anuncio/buscaranuncioporid/` + id);\n  }\n  BuscarAnuncioPorIdIncludeEmpresa(id) {\n    return this.http.get(`${environment.apiUrl}/anuncio/buscaranuncioporidincludeempresacategoria/` + id);\n  }\n  GeraClickAnuncio(id) {\n    this.http.get(`${environment.apiUrl}/anuncio/geraclickanuncio/` + id);\n  }\n  BuscarTodosAnuncios() {\n    return this.http.get(`${environment.apiUrl}/anuncio`);\n  }\n  SalvarAnuncio(obj) {\n    debugger;\n    return this.http.post(`${environment.apiUrl}/anuncio`, obj);\n  }\n  AtualizarAnuncio(obj) {\n    return this.http.put(`${environment.apiUrl}/anuncio`, obj);\n  }\n  DeletarAnuncio(obj) {\n    return this.http.delete(`${environment.apiUrl}/anuncio`, obj);\n  }\n  postUpload(file) {\n    const fileToUpload = file[0];\n    const formData = new FormData();\n    formData.append(\"file\", fileToUpload, fileToUpload.name);\n    return this.http.post(`${environment.apiUrl}/anuncio/upload-image`, formData);\n  }\n  EnviarArquivo(arquivoSelecionado) {\n    const formData = new FormData();\n    formData.append(\"arquivoEnviado\", arquivoSelecionado, arquivoSelecionado.name);\n    return this.http.post(`${environment.apiUrl}/anuncio/enviarArquivo`, formData);\n  }\n}\nAnuncioService.ɵfac = function AnuncioService_Factory(t) {\n  return new (t || AnuncioService)(i0.ɵɵinject(i1.HttpClient));\n};\nAnuncioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AnuncioService,\n  factory: AnuncioService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,kCAAkC;;;AAS9D,OAAM,MAAOC,cAAc;EAEzBC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EACZ;EAEFC,iCAAiC,CAACC,SAAkB;IAClD,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAGN,WAAW,CAACO,MAAM,8BAA8B,GAACF,SAAS,CAAC;EAC5F;EACAG,0BAA0B,CAACH,SAAiB;IAC1C,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAGN,WAAW,CAACO,MAAM,sCAAsC,GAACF,SAAS,CAAC;EACpG;EAEAI,kBAAkB,CAACC,EAAU;IAC3B,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAQ,GAAGN,WAAW,CAACO,MAAM,8BAA8B,GAACG,EAAE,CAAC;EACrF;EAEAC,gCAAgC,CAACD,EAAU;IACzC,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAQ,GAAGN,WAAW,CAACO,MAAM,qDAAqD,GAACG,EAAE,CAAC;EAC5G;EAEAE,gBAAgB,CAACF,EAAU;IACzB,IAAI,CAACP,IAAI,CAACG,GAAG,CAAC,GAAGN,WAAW,CAACO,MAAM,4BAA4B,GAACG,EAAE,CAAC;EACrE;EAEAG,mBAAmB;IACjB,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAQ,GAAGN,WAAW,CAACO,MAAM,UAAU,CAAC;EAC9D;EACAO,aAAa,CAACC,GAAQ;IACpB;IACA,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAC,GAAGhB,WAAW,CAACO,MAAM,UAAU,EAAEQ,GAAG,CAAC;EAC7D;EACAE,gBAAgB,CAACF,GAAQ;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACe,GAAG,CAAC,GAAGlB,WAAW,CAACO,MAAM,UAAU,EAAEQ,GAAG,CAAC;EAC5D;EACAI,cAAc,CAACJ,GAAQ;IACrB,OAAO,IAAI,CAACZ,IAAI,CAACiB,MAAM,CAAC,GAAGpB,WAAW,CAACO,MAAM,UAAU,EAAEQ,GAAG,CAAC;EAC/D;EAEAM,UAAU,CAACC,IAAU;IACnB,MAAMC,YAAY,GAAGD,IAAI,CAAC,CAAC,CAAS;IACpC,MAAME,QAAQ,GAAa,IAAIC,QAAQ,EAAE;IACzCD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,YAAY,EAAEA,YAAY,CAACI,IAAI,CAAC;IACxD,OAAO,IAAI,CAACxB,IAAI,CAACa,IAAI,CAAS,GAAGhB,WAAW,CAACO,MAAM,uBAAuB,EAAEiB,QAAQ,CAAC;EACvF;EAEAI,aAAa,CAACC,kBAAwB;IACpC,MAAML,QAAQ,GAAa,IAAIC,QAAQ,EAAE;IACzCD,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEG,kBAAkB,EAAEA,kBAAkB,CAACF,IAAI,CAAC;IAC9E,OAAO,IAAI,CAACxB,IAAI,CAACa,IAAI,CAAS,GAAGhB,WAAW,CAACO,MAAM,wBAAwB,EAAEiB,QAAQ,CAAC;EACxF;;AAlDWvB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA6B,SAAd7B,cAAc;EAAA8B,YAFb;AAAM","names":["environment","AnuncioService","constructor","http","BuscarTodosAnunciosOuPorDescricao","descricao","get","apiUrl","BuscarAnunciosPorDescricao","BuscarAnuncioPorId","id","BuscarAnuncioPorIdIncludeEmpresa","GeraClickAnuncio","BuscarTodosAnuncios","SalvarAnuncio","obj","post","AtualizarAnuncio","put","DeletarAnuncio","delete","postUpload","file","fileToUpload","formData","FormData","append","name","EnviarArquivo","arquivoSelecionado","factory","providedIn"],"sourceRoot":"","sources":["D:\\projetos\\MarketingFront\\MarketingAppFront\\src\\app\\Services\\AnuncioService.ts"],"sourcesContent":["import { Observable } from 'rxjs';\r\nimport { environment } from './../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core';\r\nimport { inject } from '@angular/core/testing';\r\nimport { Anuncio } from '../Models/Anuncio';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnuncioService{\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ){}\r\n\r\n  BuscarTodosAnunciosOuPorDescricao(descricao?: string): Observable<any>{\r\n    return this.http.get<any[]>(`${environment.apiUrl}/anuncio/buscatodosanuncios/`+descricao)\r\n  }\r\n  BuscarAnunciosPorDescricao(descricao: string): Observable<any>{\r\n    return this.http.get<any[]>(`${environment.apiUrl}/anuncio/buscaranunciospordescricao/`+descricao)\r\n  }\r\n\r\n  BuscarAnuncioPorId(id: string): Observable<any>{\r\n    return this.http.get<any[]>(`${environment.apiUrl}/anuncio/buscaranuncioporid/`+id)\r\n  }\r\n\r\n  BuscarAnuncioPorIdIncludeEmpresa(id: string): Observable<any>{\r\n    return this.http.get<any[]>(`${environment.apiUrl}/anuncio/buscaranuncioporidincludeempresacategoria/`+id)\r\n  }\r\n\r\n  GeraClickAnuncio(id: string){\r\n    this.http.get(`${environment.apiUrl}/anuncio/geraclickanuncio/`+id)\r\n  }\r\n\r\n  BuscarTodosAnuncios(): Observable<any>{\r\n    return this.http.get<any[]>(`${environment.apiUrl}/anuncio`)\r\n  }\r\n  SalvarAnuncio(obj: any){\r\n    debugger;\r\n    return this.http.post(`${environment.apiUrl}/anuncio`, obj)\r\n  }\r\n  AtualizarAnuncio(obj: any): Observable<any>{\r\n    return this.http.put(`${environment.apiUrl}/anuncio`, obj)\r\n  }\r\n  DeletarAnuncio(obj: any): Observable<any>{\r\n    return this.http.delete(`${environment.apiUrl}/anuncio`, obj)\r\n  }\r\n\r\n  postUpload(file: File): Observable<string>{\r\n    const fileToUpload = file[0] as File;\r\n    const formData: FormData = new FormData();\r\n    formData.append(\"file\", fileToUpload, fileToUpload.name);\r\n    return this.http.post<string>(`${environment.apiUrl}/anuncio/upload-image`, formData);\r\n  }\r\n\r\n  EnviarArquivo(arquivoSelecionado: File) : Observable<string> {\r\n    const formData: FormData = new FormData();\r\n    formData.append(\"arquivoEnviado\", arquivoSelecionado, arquivoSelecionado.name);\r\n    return this.http.post<string>(`${environment.apiUrl}/anuncio/enviarArquivo`, formData);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}