{"ast":null,"code":"import { Component, Injectable } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport class CadastrarAnuncioComponent {\n  constructor(fb, anuncioservice, categoriaService, toast) {\n    this.fb = fb;\n    this.anuncioservice = anuncioservice;\n    this.categoriaService = categoriaService;\n    this.toast = toast;\n    this.categorias = [];\n    this.empresaId = 0;\n    this.categoriaId = 0;\n    this.nomeArquivo = '';\n    this.imagemUrl = \"../../../../assets/images/icons/upload.png\";\n  }\n  ngOnInit() {\n    this.validation();\n    this.BuscarCategorias();\n  }\n  get f() {\n    return this.form.controls;\n  }\n  onChange(event) {\n    const selectedFiles = event.srcElement.files;\n    document.getElementById('imageLabel').innerHTML = selectedFiles[0].name;\n  }\n  validation() {\n    this.form = this.fb.group({\n      descricao: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(150)]],\n      data_validade: ['', Validators.required],\n      preco: ['', Validators.required],\n      categoria: ['', Validators.required],\n      imagem: ['', Validators.required]\n    });\n  }\n  salvarAnuncio() {\n    debugger;\n    this.categoriaId = parseInt(document.getElementById('categoriaId').value);\n    this.empresaId = 3;\n    let anuncio = {\n      descricao: this.f.descricao.value,\n      data_validade: this.f.data_validade.value,\n      preco: this.f.preco.value,\n      ativo: true,\n      is_destaque: false,\n      categoria_id: this.categoriaId,\n      empresa_id: this.empresaId,\n      imagem_url: this.nomeArquivo\n    };\n    this.anuncioservice.SalvarAnuncio(anuncio).subscribe(() => {\n      this.toast.success('Anúncio cadastrado com sucesso!', 'Sucesso');\n    }, erro => {\n      this.toast.error('Erro ao cadastrar o anúncio.', 'Erro');\n    });\n  }\n  BuscarCategorias() {\n    this.categoriaService.BuscarTodasCategorias().subscribe(result => {\n      if (result != null) {\n        this.categorias = result;\n      }\n    }, () => {\n      alert(`Nenhuma categoria encontrada. Verifique a conexão com a internet.`);\n    });\n  }\n  onFileChange(ev) {\n    const reader = new FileReader();\n    reader.onload = event => this.imagemUrl = event.target.result;\n    this.file = ev.target.files;\n    reader.readAsDataURL(this.file[0]);\n    this.uploadImagem();\n  }\n  uploadImagem() {\n    this.anuncioservice.postUpload(this.file).subscribe(fileName => {\n      this.nomeArquivo = fileName;\n    }, error => {\n      alert('Erro ao enviar imagem para o servidor.');\n    });\n  }\n  inputChange(event) {\n    const files = event.target.files;\n    this.arquivoSelecionado = files?.item(0);\n    this.anuncioservice.EnviarArquivo(this.arquivoSelecionado).subscribe(nomeArquivo => {\n      this.nomeArquivo = nomeArquivo;\n      this.localUrl = this.arquivoSelecionado;\n      console.log(this.arquivoSelecionado);\n    });\n  }\n  selectFile(event) {\n    this.file = event.target.files[0];\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      reader.onload = event => {\n        this.localUrl = event.target.result;\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n}\nCadastrarAnuncioComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CadastrarAnuncioComponent,\n  factory: CadastrarAnuncioComponent.ɵfac\n});","map":{"version":3,"mappings":"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","names":["Component","Injectable","Validators","CadastrarAnuncioComponent","constructor","fb","anuncioservice","categoriaService","toast","ngOnInit","validation","BuscarCategorias","f","form","controls","onChange","event","selectedFiles","srcElement","files","document","getElementById","innerHTML","name","group","descricao","required","minLength","maxLength","data_validade","preco","categoria","imagem","salvarAnuncio","categoriaId","parseInt","value","empresaId","anuncio","ativo","is_destaque","categoria_id","empresa_id","imagem_url","nomeArquivo","SalvarAnuncio","subscribe","success","erro","error","BuscarTodasCategorias","result","categorias","alert","onFileChange","ev","reader","FileReader","onload","imagemUrl","target","file","readAsDataURL","uploadImagem","postUpload","fileName","inputChange","arquivoSelecionado","item","EnviarArquivo","localUrl","console","log","selectFile","factory"],"sourceRoot":"","sources":["D:\\projetos\\MarketingFront\\MarketingAppFront\\src\\app\\Components\\Anuncio\\cadastrar-anuncio\\cadastrar-anuncio.component.ts"],"sourcesContent":["import { Anuncio } from './../../../Models/Anuncio';\nimport { CategoriaService } from './../../../Services/CategoriaService';\nimport { EmpresaService } from './../../../Services/EmpresaService';\nimport { AnuncioService } from 'src/app/Services/AnuncioService';\nimport { Empresa } from './../../../Models/Empresa';\nimport { Component, Injectable, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CategoriaAnuncio } from 'src/app/Models/CategoriaAnuncio';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-cadastrar-anuncio',\n  templateUrl: './cadastrar-anuncio.component.html',\n  styleUrls: ['./cadastrar-anuncio.component.css'],\n})\n\n@Injectable()\n\nexport class CadastrarAnuncioComponent implements OnInit {\n  form: FormGroup;\n  categorias: CategoriaAnuncio[] = [];\n  empresaId: number = 0;\n  categoriaId: number = 0;\n  localUrl: any;\n  file?: File;\n  nomeArquivo: string = '';\n  imagemUrl = \"../../../../assets/images/icons/upload.png\";\n  public arquivoSelecionado: File | null | undefined;\n\n  constructor(\n    private fb: FormBuilder,\n    private anuncioservice: AnuncioService,\n    private categoriaService: CategoriaService,\n    private toast: ToastrService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.validation();\n    this.BuscarCategorias();\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onChange(event: any) {\n    const selectedFiles = <FileList>event.srcElement.files;\n    document.getElementById('imageLabel')!.innerHTML = selectedFiles[0].name;\n  }\n\n  public validation(): void{\n    this.form = this.fb.group({\n      descricao: ['',[Validators.required, Validators.minLength(4), Validators.maxLength(150)]],\n      data_validade: ['', Validators.required],\n      preco: ['', Validators.required],\n      categoria: ['', Validators.required],\n      imagem: ['', Validators.required],\n    });\n  }\n\n  salvarAnuncio() {\n    debugger;\n    this.categoriaId = parseInt(\n      (<HTMLSelectElement>document.getElementById('categoriaId')).value\n    );\n    this.empresaId = 3;\n\n    let anuncio = {\n      descricao: this.f.descricao.value,\n      data_validade: this.f.data_validade.value,\n      preco: this.f.preco.value,\n      ativo: true,\n      is_destaque: false,\n      categoria_id: this.categoriaId,\n      empresa_id: this.empresaId,\n      imagem_url: this.nomeArquivo,\n    };\n\n    this.anuncioservice.SalvarAnuncio(anuncio)\n    .subscribe(\n      () => {\n        this.toast.success('Anúncio cadastrado com sucesso!', 'Sucesso');\n      },\n      (erro) => {\n        this.toast.error('Erro ao cadastrar o anúncio.', 'Erro');\n      }\n    );\n  }\n\n  BuscarCategorias() {\n    this.categoriaService.BuscarTodasCategorias().subscribe(\n      (result) => {\n        if (result != null) {\n          this.categorias = result;\n        }\n      },\n      () => {\n        alert(\n          `Nenhuma categoria encontrada. Verifique a conexão com a internet.`\n        );\n      }\n    );\n  }\n\n  onFileChange(ev :any) : void{\n\n    const reader = new FileReader();\n    reader.onload = (event : any) => this.imagemUrl = event.target.result;\n    this.file = ev.target.files;\n    reader.readAsDataURL(this.file[0]);\n    this.uploadImagem();\n  }\n\n  uploadImagem(): void{\n    this.anuncioservice.postUpload(this.file)\n    .subscribe(\n      (fileName) => {\n        this.nomeArquivo = fileName;\n      },\n      (error: any) => {\n        alert('Erro ao enviar imagem para o servidor.');\n      }\n    )\n  }\n\n  inputChange(event: Event) {\n    const files = (event.target as HTMLInputElement).files;\n    this.arquivoSelecionado = files?.item(0);\n    this.anuncioservice\n      .EnviarArquivo(this.arquivoSelecionado!)\n      .subscribe((nomeArquivo) => {\n        this.nomeArquivo = nomeArquivo;\n        this.localUrl = this.arquivoSelecionado;\n        console.log(this.arquivoSelecionado);\n      });\n  }\n\n  selectFile(event: any) {\n    this.file = <File>event.target.files[0];\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      reader.onload = (event: any) => {\n        this.localUrl = event.target.result;\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}